{
    "description": "Push data to Process Intelligence via Ingestion API",
    "component": "com.sap.system.python3Operator",
    "versionStatus": "active",
    "outports": [
        {
            "name": "outData",
            "type": "string"
        }
    ],
    "iconsrc": "SAP_Signavio_horz_R_pos_blugld.svg",
    "config": {
        "$type": "http://sap.com/vflow/Push data to PI via Ingestion API.configSchema.json",
        "script": "######## PUSH TO PI INGESTION API #######\r\n\r\n\r\n# Python 3\r\nimport pandas as pd\r\nimport requests\r\nimport json\r\nimport io\r\n\r\n\r\n# Setting user Parameters\r\napiToken = api.config.token\r\ntableName = api.config.tableName\r\nurl = 'https://spi-etl-ingestion.eu-prod-cloud-os-eu.suite-saas-prod.signav.io/ingestion/data'\r\npk = ['ResponseID']\r\nfile_path = 'qualtrics_survey_for_pi.csv'\r\ndelimiter = ','\r\n\r\n\r\n\r\ndef on_input(input1):\r\n    \r\n    df1 = pd.read_csv(io.StringIO(input1), sep=',', engine='python')\r\n    s = requests.session()\r\n    df1.to_csv(file_path, index=False)\r\n    \r\n    columns = [\r\n        {'name': 'ResponseID', 'type': 'string'},\r\n        {'name': 'EndDate', 'type': {'type': 'long', 'logicalType': 'timestamp-millis'}},\r\n        {'name': 'RecipientLastName', 'type': ['null', 'string']},\r\n        {'name': 'RecipientFirstName', 'type': ['null', 'string']},\r\n        {'name': 'RecipientEmail', 'type': ['null', 'string']},\r\n        {'name': 'Location', 'type': ['null', 'string']},\r\n        {'name': 'Type', 'type': ['null', 'string']},\r\n        {'name': 'Operator', 'type': ['null', 'string']},\r\n        {'name': 'Q1', 'type': ['null', 'double']},\r\n        {'name': 'Q5_1', 'type': ['null', 'double']},\r\n        {'name': 'Q5_2', 'type': ['null', 'double']},\r\n        {'name': 'Q5_3', 'type': ['null', 'double']},\r\n        {'name': 'Q11_1', 'type': ['null', 'double']},\r\n        {'name': 'Q11_2', 'type': ['null', 'double']},\r\n        {'name': 'Q11_3', 'type': ['null', 'double']},\r\n        {'name': 'Q6', 'type': ['null', 'double']}\r\n    ]\r\n    \r\n    headers = {'Authorization': 'Bearer {}'.format(apiToken)}\r\n    schema = {\"type\": \"record\", \"delimiter\": delimiter, \"name\": tableName, \"fields\": columns}\r\n    data = {'schema': json.dumps(schema), 'primaryKeys': pk}\r\n    \r\n    api.logger.info(\"url: {}\".format(url))\r\n    response = requests.post(url, headers=headers, data=data, files={'file1': open(file_path, 'rb')})\r\n    \r\n    response_code = response.status_code\r\n    #if response_code != 200:\r\n    #    api.logger.info(\"Unsuccessful request with code {}. Response: {}\".format(response_code, requestDownload.text))\r\n\r\n    api.send(\"outData\", response.text)\r\n\r\n\r\napi.set_port_callback(\"input1\", on_input)\r\n"
    }
}
